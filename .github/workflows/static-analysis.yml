name: static analysis

on:
  pull_request:
    branches:
      - development
      - master
  pull_request_target:
    branches:
      - development
      - master
  push:
    branches:
      - development
      - master

jobs:
  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest
    env:
      SKIP: pylint # pylint will run in another dedicated job (needs poetry)
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python version
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: set PY_HASH
      run: echo "PY_HASH=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_ENV
    - name: Cache pre-commit tools
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: precommit-${{ env.PY_HASH }}-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          precommit-${{ env.PY_HASH }}-
          precommit-
    - uses: pre-commit/action@v2.0.0
    - name: Git show refs
      run: git show-ref
    - name: Run pre-commit hooks on modified files
      if: github.event_name == 'pull_request'
      run: >-
        git diff --name-only refs/remotes/origin/${{github.base_ref}}... |
        xargs pre-commit run --files
    - name: Run pre-commit hooks on all files
      if: github.event_name == 'push'
      run: pre-commit run --all-files

  pylint:
    name: pylint
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: true
      POETRY_VIRTUALENVS_IN_PROJECT: true
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python version
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Get full Python version
      id: full-python-version
      shell: bash
      run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
    - name: Install Poetry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
    - name: Environment
      run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Set up cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s poetry run pip --version || rm -rf .venv
    - name: Install dependencies
      run: poetry install -vvv
    - name: Run pylint on modified files
      if: github.event_name == 'pull_request'
      run: >-
        poetry run pylint -j0 $(
        git diff --diff-filter=AM --name-only refs/remotes/origin/${{github.base_ref}}... | grep -E '^(geoh5py|tests)/.*\.py$'
        || echo 'geoh5py/__init__.py'
        )
    - name: Run pylint on all files
      if: github.event_name == 'push'
      run: poetry run pylint -j0 geoh5py tests
