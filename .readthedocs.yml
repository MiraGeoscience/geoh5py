version: 2

# Set the version of Python and other tools you might need
build:
  os: "ubuntu-22.04"
  tools:
    python: "mambaforge-22.9"
  jobs:
    post_checkout:
      - echo "[RTD] Configure Git LFS"
      # Download and uncompress the binary
      # https://git-lfs.github.com/
      - wget https://github.com/git-lfs/git-lfs/releases/download/v3.1.4/git-lfs-linux-amd64-v3.1.4.tar.gz
      - tar xvfz git-lfs-linux-amd64-v3.1.4.tar.gz
      # Modify LFS config paths to point where git-lfs binary was downloaded
      - git config filter.lfs.process "`pwd`/git-lfs filter-process"
      - git config filter.lfs.smudge  "`pwd`/git-lfs smudge -- %f"
      - git config filter.lfs.clean "`pwd`/git-lfs clean -- %f"
      # Make LFS available in current repository
      - ./git-lfs install
      # Download content from remote
      - ./git-lfs fetch
      # Make local files to have the real content on them
      - ./git-lfs checkout
      # unshallow the clone for auto-versioning: deepen from HEAD back to latest version tag
      - echo "[RTD] Unshallow back to the latest version tag"
      - git fetch origin --no-tags '+refs/tags/v[0-9]*:refs/tags/v[0-9]*' --depth=1
      - latest_tag="$(git tag -l 'v[0-9]*' --sort=-v:refname | head -n1)"
      - branch="$(git rev-parse --abbrev-ref HEAD)"; \
        if [ "$branch" = "HEAD" ]; then \
          branch="$(git symbolic-ref --short refs/remotes/origin/HEAD | sed 's@^origin/@@')"; \
        fi; \
      - git fetch origin "$branch" --update-shallow --shallow-exclude="$latest_tag^"

    pre_build:
      # Generate on-the-fly Sphinx configuration from Jupyter Book's _config.yml
      - "jupyter-book config sphinx docs/"
      - "pip install . --no-deps"

# Build documentation in the docs/ directory with Sphinx
sphinx:
  builder: html
  configuration: docs/conf.py
  fail_on_warning: false

conda:
    environment: docs/environment.yml
